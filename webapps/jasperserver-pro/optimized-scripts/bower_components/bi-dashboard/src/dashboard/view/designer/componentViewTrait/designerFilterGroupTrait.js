define(["require","../../base/componentViewTrait/filterGroupTrait","dashboard/enum/dashboardComponentTypes","underscore"],function(o){"use strict";var t=o("../../base/componentViewTrait/filterGroupTrait"),e=o("dashboard/enum/dashboardComponentTypes"),n=o("underscore");return n.extend({},t,{_initComponent:function(){this.model.isDesigner=!0,t._initComponent.apply(this,arguments),n.bindAll(this,"_onMouseDown"),this.$content.on("mousedown",this._onMouseDown)},_onMouseDown:function(o){var t=this.$el.parent();if(t.hasClass("ui-draggable")){var e=this.$content.offset().left,n=o.pageX>e+this.scrollBarPosition.x2&&o.pageX<e+this.scrollBarPosition.x1;t.draggable("option","disabled",n)}},_resizeComponent:function(){t._resizeComponent.apply(this,arguments),this._getScrollBarPosition();var o=this;n.chain(this.component.componentViews||[]).filter(function(t){return t.model.get("type")===e.INPUT_CONTROL&&t.model.getParent()===o.model}).invoke("_resizeComponent")},_getScrollBarPosition:function(){var o=this.$content.css("overflow-y");this.scrollBarPosition={x1:this.$content.css("overflow-y","hidden")[0].clientWidth,x2:this.$content.css("overflow-y",o)[0].clientWidth}},_toggleButtons:function(){this.component.disableButtons()},_onDashboardPropertiesChange:function(o){var t=o.changedAttributes();"dashletFilterShowPopup"in t&&this.model.set("floating",t.dashletFilterShowPopup)},_removeComponent:function(){t._removeComponent.apply(this,arguments),this.$content.off("mousedown",this._onMouseDown)}})});