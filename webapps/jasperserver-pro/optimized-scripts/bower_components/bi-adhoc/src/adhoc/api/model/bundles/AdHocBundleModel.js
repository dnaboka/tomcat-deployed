define(["require","backbone","underscore","./RepositoryBundleFileModel","bi/repository/enum/repositoryResourceTypes"],function(e){"use strict";function t(e){if(s.FILE in e)this.resource=new r(e[s.FILE],{contextPath:this.collection.CONTEXT_PATH});else{if(!e.fileReference)throw new Error("Unknown value",e);this.resource=new r(e.fileReference,{contextPath:this.collection.CONTEXT_PATH})}}var i=e("backbone"),o=e("underscore"),r=e("./RepositoryBundleFileModel"),s=e("bi/repository/enum/repositoryResourceTypes"),n=i.Model.extend({idAttribute:"locale",defaults:{locale:void 0,file:void 0},initialize:function(){this.updateResource(),this.on("change:file",this.updateResource),this.on("change:fileReference",this.updateResource)},updateResource:function(){var e=this.get("file")||this.get("fileReference");e&&o.isObject(e)&&(this.resource?this.resource.set(e):t.call(this,e))},toJSON:function(e){var t=i.Model.prototype.toJSON.apply(this,arguments);return t.file={},this.resource.isNew()||e===!0?t.file.file=this.resource.toJSON(!0):t.file.fileReference={uri:this.resource.get("uri")},t},toLabel:function(e){return this.resource.contentJSON[e]}});return n});